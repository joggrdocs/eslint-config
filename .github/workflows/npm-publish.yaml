name: 'Publish to npm'

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Semantic Version, one of major, minor, patch.'
        required: true
        default: 'minor'
        type: choice
        options:
          - major
          - patch
          - minor

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - name: '🛒 Checkout Code'
        uses: actions/checkout@v4

      - name: '🔼 Update Version'
        run: yarn version ${{ inputs.version }}

      - name: '🔍 Get Version'
        id: version
        run: echo ::set-output name=version::$(node -p "require('./package.json').version")

      - name: '💾 Commit Version'
        run: |
          git config --local user.email "scotty@joggr.io"
          git config --local user.name "Scotty (Bot)"
          git add -A
          git commit -am "[release]: ${{ inputs.version }}"

      - name: '📝 Generate Release Notes'
        uses: toolmantim/release-drafter@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version: ${{ inputs.version }}

      - name: '✅ Check if package.json Version matches tag'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs')
            const packageJson = JSON.parse(fs.readFileSync('${{ github.workspace }}/package.json'))
            const pjv = packageJson.version
            const tv = "${{ github.ref_name }}".replace('v', '')

            if (pjv !== tv) {
              throw new Error(`The tagged release, ${tv}, doesn't match the package.json version, ${pjv}. Please fix the issue, delete the tag & release and try again.`)
            }

      - name: '🟢 Use Node.js'
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'

      - name: '⚡️ Install Packages'
        run: yarn install

      - name: '🏗️ Build'
        run: yarn build

      - name: '🚢 Publish'
        run: yarn publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH }}
