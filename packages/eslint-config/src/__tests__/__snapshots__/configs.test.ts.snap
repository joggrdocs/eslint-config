// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`configs > should have a valid config file: core.ts 1`] = `
{
  "default": {
    "env": {
      "jest": true,
    },
    "extends": [
      "eslint:recommended",
      "plugin:@typescript-eslint/recommended",
      "standard-with-typescript",
      "prettier",
    ],
    "ignorePatterns": [
      "dist",
      "build",
      ".eslintrc.cjs",
      "**/__tests__/**",
      "**/__mocks__/**",
      "**/__fixtures__/**",
      "**/__snapshots__/**",
      "**/node_modules/**",
      "**/dist/**",
      "**/coverage/**",
      ".yarn/**",
    ],
    "parser": "@typescript-eslint/parser",
    "plugins": [
      "@typescript-eslint",
      "filenames-simple",
      "jest",
    ],
    "root": true,
    "rules": {
      "@typescript-eslint/await-thenable": "warn",
      "@typescript-eslint/explicit-function-return-type": "warn",
      "@typescript-eslint/method-signature-style": "warn",
      "@typescript-eslint/naming-convention": "warn",
      "@typescript-eslint/no-explicit-any": "warn",
      "@typescript-eslint/no-extra-semi": "error",
      "@typescript-eslint/no-floating-promises": "warn",
      "@typescript-eslint/no-invalid-void-type": "warn",
      "@typescript-eslint/no-unused-vars": "warn",
      "@typescript-eslint/prefer-nullish-coalescing": "warn",
      "@typescript-eslint/prefer-optional-chain": "warn",
      "@typescript-eslint/restrict-template-expressions": "warn",
      "@typescript-eslint/semi": [
        "error",
        "always",
      ],
      "@typescript-eslint/strict-boolean-expressions": "warn",
      "@typescript-eslint/triple-slash-reference": "warn",
      "filenames-simple/naming-convention": [
        "error",
        {
          "rule": "kebab-case",
        },
      ],
      "import/order": [
        "error",
        {
          "alphabetize": {
            "caseInsensitive": true,
            "order": "asc",
          },
          "distinctGroup": false,
          "groups": [
            "builtin",
            "external",
            "internal",
            [
              "parent",
              "sibling",
            ],
            "index",
          ],
          "newlines-between": "always",
        },
      ],
    },
  },
}
`;

exports[`configs > should have a valid config file: node.ts 1`] = `
{
  "default": {
    "env": {
      "jest": true,
      "node": true,
    },
    "extends": [
      "eslint:recommended",
      "plugin:@typescript-eslint/recommended",
      "standard-with-typescript",
      "prettier",
    ],
    "ignorePatterns": [
      "dist",
      "build",
      ".eslintrc.cjs",
      "**/__tests__/**",
      "**/__mocks__/**",
      "**/__fixtures__/**",
      "**/__snapshots__/**",
      "**/node_modules/**",
      "**/dist/**",
      "**/coverage/**",
      ".yarn/**",
    ],
    "parser": "@typescript-eslint/parser",
    "plugins": [
      "@typescript-eslint",
      "filenames-simple",
      "jest",
    ],
    "root": true,
    "rules": {
      "@typescript-eslint/await-thenable": "warn",
      "@typescript-eslint/explicit-function-return-type": "warn",
      "@typescript-eslint/method-signature-style": "warn",
      "@typescript-eslint/naming-convention": "warn",
      "@typescript-eslint/no-explicit-any": "warn",
      "@typescript-eslint/no-extra-semi": "error",
      "@typescript-eslint/no-floating-promises": "warn",
      "@typescript-eslint/no-invalid-void-type": "warn",
      "@typescript-eslint/no-unused-vars": "warn",
      "@typescript-eslint/prefer-nullish-coalescing": "warn",
      "@typescript-eslint/prefer-optional-chain": "warn",
      "@typescript-eslint/restrict-template-expressions": "warn",
      "@typescript-eslint/semi": [
        "error",
        "always",
      ],
      "@typescript-eslint/strict-boolean-expressions": "warn",
      "@typescript-eslint/triple-slash-reference": "warn",
      "filenames-simple/naming-convention": [
        "error",
        {
          "rule": "kebab-case",
        },
      ],
      "import/order": [
        "error",
        {
          "alphabetize": {
            "caseInsensitive": true,
            "order": "asc",
          },
          "distinctGroup": false,
          "groups": [
            "builtin",
            "external",
            "internal",
            [
              "parent",
              "sibling",
            ],
            "index",
          ],
          "newlines-between": "always",
        },
      ],
    },
  },
}
`;

exports[`configs > should have a valid config file: react.ts 1`] = `
{
  "default": {
    "env": {
      "browser": true,
      "es2021": true,
      "jest": true,
    },
    "extends": [
      "eslint:recommended",
      "plugin:@typescript-eslint/recommended",
      "standard-with-typescript",
      "prettier",
      "plugin:react/recommended",
      "plugin:react-hooks/recommended",
      "plugin:storybook/recommended",
    ],
    "ignorePatterns": [
      "dist",
      "build",
      ".eslintrc.cjs",
      "**/__tests__/**",
      "**/__mocks__/**",
      "**/__fixtures__/**",
      "**/__snapshots__/**",
      "**/node_modules/**",
      "**/dist/**",
      "**/coverage/**",
      ".yarn/**",
    ],
    "overrides": [
      {
        "files": [
          "*.tsx",
          "*.test.tsx",
          "*.stories.tsx",
        ],
        "rules": {
          "filenames-simple/naming-convention": [
            "error",
            {
              "rule": "PascalCase",
            },
          ],
        },
      },
    ],
    "parser": "@typescript-eslint/parser",
    "plugins": [
      "@typescript-eslint",
      "filenames-simple",
      "jest",
      "storybook",
      "react-hooks",
      "react",
    ],
    "root": true,
    "rules": {
      "@typescript-eslint/await-thenable": "warn",
      "@typescript-eslint/explicit-function-return-type": "warn",
      "@typescript-eslint/method-signature-style": "warn",
      "@typescript-eslint/naming-convention": "warn",
      "@typescript-eslint/no-explicit-any": "warn",
      "@typescript-eslint/no-extra-semi": "error",
      "@typescript-eslint/no-floating-promises": "warn",
      "@typescript-eslint/no-invalid-void-type": "warn",
      "@typescript-eslint/no-unused-vars": "warn",
      "@typescript-eslint/prefer-nullish-coalescing": "warn",
      "@typescript-eslint/prefer-optional-chain": "warn",
      "@typescript-eslint/restrict-template-expressions": "warn",
      "@typescript-eslint/semi": [
        "error",
        "always",
      ],
      "@typescript-eslint/strict-boolean-expressions": "warn",
      "@typescript-eslint/triple-slash-reference": "warn",
      "filenames-simple/naming-convention": [
        "error",
        {
          "rule": "kebab-case",
        },
      ],
      "import/order": [
        "error",
        {
          "alphabetize": {
            "caseInsensitive": true,
            "order": "asc",
          },
          "distinctGroup": false,
          "groups": [
            "builtin",
            "external",
            "internal",
            [
              "parent",
              "sibling",
            ],
            "index",
          ],
          "newlines-between": "always",
        },
      ],
      "react/no-unescaped-entities": "off",
      "react/prop-types": "off",
    },
    "settings": {
      "react": {
        "version": "detect",
      },
    },
  },
}
`;
